# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dolt_pb2 as dolt__pb2


class DebugStub(object):
  """debug service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Start = channel.unary_unary(
        '/dOLT.Debug/Start',
        request_serializer=dolt__pb2.Empty.SerializeToString,
        response_deserializer=dolt__pb2.Empty.FromString,
        )
    self.Stop = channel.unary_unary(
        '/dOLT.Debug/Stop',
        request_serializer=dolt__pb2.Empty.SerializeToString,
        response_deserializer=dolt__pb2.Empty.FromString,
        )
    self.SendCmd = channel.unary_unary(
        '/dOLT.Debug/SendCmd',
        request_serializer=dolt__pb2.OmciMsg.SerializeToString,
        response_deserializer=dolt__pb2.Empty.FromString,
        )
    self.RecvReply = channel.unary_stream(
        '/dOLT.Debug/RecvReply',
        request_serializer=dolt__pb2.Empty.SerializeToString,
        response_deserializer=dolt__pb2.OmciMsg.FromString,
        )


class DebugServicer(object):
  """debug service
  """

  def Start(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendCmd(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RecvReply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DebugServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Start': grpc.unary_unary_rpc_method_handler(
          servicer.Start,
          request_deserializer=dolt__pb2.Empty.FromString,
          response_serializer=dolt__pb2.Empty.SerializeToString,
      ),
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=dolt__pb2.Empty.FromString,
          response_serializer=dolt__pb2.Empty.SerializeToString,
      ),
      'SendCmd': grpc.unary_unary_rpc_method_handler(
          servicer.SendCmd,
          request_deserializer=dolt__pb2.OmciMsg.FromString,
          response_serializer=dolt__pb2.Empty.SerializeToString,
      ),
      'RecvReply': grpc.unary_stream_rpc_method_handler(
          servicer.RecvReply,
          request_deserializer=dolt__pb2.Empty.FromString,
          response_serializer=dolt__pb2.OmciMsg.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dOLT.Debug', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
